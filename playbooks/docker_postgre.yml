---
- name: configure postgresql instance
  hosts: _ansible_postgresql
  become: true
  vars_files:
    - secret.yml
  tasks:
    # - name: upgrade all packages # sudo yum update -y komutunun playbook halidir
    #   ansible.builtin.yum:
    #     name: '*'
    #     state: latest
    #   # sudo yum update

    # - name: remove older versions of docker if installed
    #   ansible.builtin.yum:
    #     name:
    #       - docker
    #       - docker-client
    #       - docker-client-latest
    #       - docker-common
    #       - docker-latest
    #       - docker-latest-logrotate
    #       - docker-logrotate
    #       - docker-engine
    #     state: removed

    # - name: install yum utils
    #   ansible.builtin.yum:
    #     name: "yum-utils"
    #     state: latest

    # - name: add docker repo
    #   ansible.builtin.get_url:
    #     url: https://download.docker.com/linux/centos/docker-ce.repo
    #     dest: /etc/yum.repos.d/docker-ce.repo

    # - name: install docker
    #   ansible.builtin.package:
    #     name: docker-ce
    #     state: latest

    # - name: add ec2-user to docker group
    #   ansible.builtin.user:
    #     name: ec2-user
    #     groups: docker
    #     append: yes   # usermod -a _G docker ec2-user burdaki -a diger gruplardan cikarma demektir.
    #   # usermod -a -G docker ec2-user  

    # - name: start docker service
    #   ansible.builtin.service:
    #     name: docker
    #     state: started
    #     enabled: yes 

    - name: copy files to postgresql node
      ansible.builtin.copy:
        src: /home/ec2-user/ansible/project-ansible-todo-app/ansible-project/postgres/  # en sondaki / kalsör altindaki dosyalari kopyalar. Olmazsa sadece klasörü kopyalar.
        dest: /home/ec2-user/postgresql

    - name: remove cw_postgre container
      community.docker.docker_container:
        name: cw_postgre
        state: absent
        force_kill: true

    - name: remove clarusway/postgre image
      community.docker.docker_image:
        name: clarusway/postgre
        state: absent

    - name: build the container image
      community.docker.docker_image:
        name: clarusway/postgre
        build:
          path: /home/ec2-user/postgresql
        source: build
        state: present
      register: image_info
    # dockerr build -t clarusway/postgre . 
        
    - name: print the image_info
      ansible.builtin.debug:
        var: image_info

    - name: launch postgresql docker container
      community.docker.docker_container:
        name: cw_postgre
        image: clarusway/postgre
        state: started
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: "{{ password }}"
        volumes:
          - /db-data:/var/lib/postgresql/data
      register: container_info
   # docker run --name cw_postgre -e POSTGRES_PASSWORD=Pp123456789 -p 5432:5432 -d clarusway/postgre:latest

    - name: print the container image_info
      ansible.builtin.debug:
        var: container_info

